{"version":3,"file":"elements.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../packages/elements/esm5/src/utils.js","../../../packages/elements/esm5/src/extract-projectable-nodes.js","../../../packages/elements/esm5/src/component-factory-strategy.js","../../../packages/elements/esm5/src/ng-element-constructor.js","../../../packages/elements/esm5/src/version.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar /** @type {?} */ elProto = /** @type {?} */ (Element.prototype);\nvar /** @type {?} */ matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n    elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n/**\n * Provide methods for scheduling the execution of a callback.\n */\nexport var /** @type {?} */ scheduler = {\n    /**\n     * Schedule a callback to be called after some delay.\n     *\n     * Returns a function that when executed will cancel the scheduled function.\n     */\n    schedule: /**\n     * Schedule a callback to be called after some delay.\n     *\n     * Returns a function that when executed will cancel the scheduled function.\n     * @param {?} taskFn\n     * @param {?} delay\n     * @return {?}\n     */\n    function (taskFn, delay) { var /** @type {?} */ id = window.setTimeout(taskFn, delay); return function () { return window.clearTimeout(id); }; },\n    /**\n     * Schedule a callback to be called before the next render.\n     * (If `window.requestAnimationFrame()` is not available, use `scheduler.schedule()` instead.)\n     *\n     * Returns a function that when executed will cancel the scheduled function.\n     */\n    scheduleBeforeRender: /**\n     * Schedule a callback to be called before the next render.\n     * (If `window.requestAnimationFrame()` is not available, use `scheduler.schedule()` instead.)\n     *\n     * Returns a function that when executed will cancel the scheduled function.\n     * @param {?} taskFn\n     * @return {?}\n     */\n    function (taskFn) {\n        // TODO(gkalpak): Implement a better way of accessing `requestAnimationFrame()`\n        //                (e.g. accounting for vendor prefix, SSR-compatibility, etc).\n        if (typeof window.requestAnimationFrame === 'undefined') {\n            var /** @type {?} */ frameMs = 16;\n            return scheduler.schedule(taskFn, frameMs);\n        }\n        var /** @type {?} */ id = window.requestAnimationFrame(taskFn);\n        return function () { return window.cancelAnimationFrame(id); };\n    },\n};\n/**\n * Convert a camelCased string to kebab-cased.\n * @param {?} input\n * @return {?}\n */\nexport function camelToDashCase(input) {\n    return input.replace(/[A-Z]/g, function (char) { return \"-\" + char.toLowerCase(); });\n}\n/**\n * Create a `CustomEvent` (even on browsers where `CustomEvent` is not a constructor).\n * @param {?} doc\n * @param {?} name\n * @param {?} detail\n * @return {?}\n */\nexport function createCustomEvent(doc, name, detail) {\n    var /** @type {?} */ bubbles = false;\n    var /** @type {?} */ cancelable = false;\n    // On IE9-11, `CustomEvent` is not a constructor.\n    if (typeof CustomEvent !== 'function') {\n        var /** @type {?} */ event_1 = doc.createEvent('CustomEvent');\n        event_1.initCustomEvent(name, bubbles, cancelable, detail);\n        return event_1;\n    }\n    return new CustomEvent(name, { bubbles: bubbles, cancelable: cancelable, detail: detail });\n}\n/**\n * Check whether the input is an `Element`.\n * @param {?} node\n * @return {?}\n */\nexport function isElement(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Check whether the input is a function.\n * @param {?} value\n * @return {?}\n */\nexport function isFunction(value) {\n    return typeof value === 'function';\n}\n/**\n * Convert a kebab-cased string to camelCased.\n * @param {?} input\n * @return {?}\n */\nexport function kebabToCamelCase(input) {\n    return input.replace(/-([a-z\\d])/g, function (_, char) { return char.toUpperCase(); });\n}\n/**\n * Check whether an `Element` matches a CSS selector.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nexport function matchesSelector(element, selector) {\n    return matches.call(element, selector);\n}\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n * @param {?} value1\n * @param {?} value2\n * @return {?}\n */\nexport function strictEquals(value1, value2) {\n    return value1 === value2 || (value1 !== value1 && value2 !== value2);\n}\n//# sourceMappingURL=utils.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isElement, matchesSelector } from './utils';\n/**\n * @param {?} host\n * @param {?} ngContentSelectors\n * @return {?}\n */\nexport function extractProjectableNodes(host, ngContentSelectors) {\n    var /** @type {?} */ nodes = host.childNodes;\n    var /** @type {?} */ projectableNodes = ngContentSelectors.map(function () { return []; });\n    var /** @type {?} */ wildcardIndex = -1;\n    ngContentSelectors.some(function (selector, i) {\n        if (selector === '*') {\n            wildcardIndex = i;\n            return true;\n        }\n        return false;\n    });\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = nodes.length; i < ii; ++i) {\n        var /** @type {?} */ node = nodes[i];\n        var /** @type {?} */ ngContentIndex = findMatchingIndex(node, ngContentSelectors, wildcardIndex);\n        if (ngContentIndex !== -1) {\n            projectableNodes[ngContentIndex].push(node);\n        }\n    }\n    return projectableNodes;\n}\n/**\n * @param {?} node\n * @param {?} selectors\n * @param {?} defaultIndex\n * @return {?}\n */\nfunction findMatchingIndex(node, selectors, defaultIndex) {\n    var /** @type {?} */ matchingIndex = defaultIndex;\n    if (isElement(node)) {\n        selectors.some(function (selector, i) {\n            if ((selector !== '*') && matchesSelector(node, selector)) {\n                matchingIndex = i;\n                return true;\n            }\n            return false;\n        });\n    }\n    return matchingIndex;\n}\n//# sourceMappingURL=extract-projectable-nodes.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ApplicationRef, Injector, SimpleChange } from '@angular/core';\nimport { merge } from 'rxjs/observable/merge';\nimport { map } from 'rxjs/operator/map';\nimport { extractProjectableNodes } from './extract-projectable-nodes';\nimport { isFunction, scheduler, strictEquals } from './utils';\n/**\n * Time in milliseconds to wait before destroying the component ref when disconnected.\n */\nvar /** @type {?} */ DESTROY_DELAY = 10;\n/**\n * Factory that creates new ComponentFactoryNgElementStrategy instances with the strategy factory's\n * injector. A new strategy instance is created with the provided component factory which will\n * create its components on connect.\n *\n * \\@experimental\n */\nvar /**\n * Factory that creates new ComponentFactoryNgElementStrategy instances with the strategy factory's\n * injector. A new strategy instance is created with the provided component factory which will\n * create its components on connect.\n *\n * \\@experimental\n */\nComponentFactoryNgElementStrategyFactory = /** @class */ (function () {\n    function ComponentFactoryNgElementStrategyFactory(componentFactory, injector) {\n        this.componentFactory = componentFactory;\n        this.injector = injector;\n    }\n    /**\n     * @return {?}\n     */\n    ComponentFactoryNgElementStrategyFactory.prototype.create = /**\n     * @return {?}\n     */\n    function () { return new ComponentFactoryNgElementStrategy(this.componentFactory, this.injector); };\n    return ComponentFactoryNgElementStrategyFactory;\n}());\n/**\n * Factory that creates new ComponentFactoryNgElementStrategy instances with the strategy factory's\n * injector. A new strategy instance is created with the provided component factory which will\n * create its components on connect.\n *\n * \\@experimental\n */\nexport { ComponentFactoryNgElementStrategyFactory };\nfunction ComponentFactoryNgElementStrategyFactory_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ComponentFactoryNgElementStrategyFactory.prototype.componentFactory;\n    /** @type {?} */\n    ComponentFactoryNgElementStrategyFactory.prototype.injector;\n}\n/**\n * Creates and destroys a component ref using a component factory and handles change detection\n * in response to input changes.\n *\n * \\@experimental\n */\nvar /**\n * Creates and destroys a component ref using a component factory and handles change detection\n * in response to input changes.\n *\n * \\@experimental\n */\nComponentFactoryNgElementStrategy = /** @class */ (function () {\n    function ComponentFactoryNgElementStrategy(componentFactory, injector) {\n        this.componentFactory = componentFactory;\n        this.injector = injector;\n        /**\n         * Changes that have been made to the component ref since the last time onChanges was called.\n         */\n        this.inputChanges = null;\n        /**\n         * Whether the created component implements the onChanges function.\n         */\n        this.implementsOnChanges = false;\n        /**\n         * Whether a change detection has been scheduled to run on the component.\n         */\n        this.scheduledChangeDetectionFn = null;\n        /**\n         * Callback function that when called will cancel a scheduled destruction on the component.\n         */\n        this.scheduledDestroyFn = null;\n        /**\n         * Initial input values that were set before the component was created.\n         */\n        this.initialInputValues = new Map();\n        /**\n         * Set of inputs that were not initially set when the component was created.\n         */\n        this.uninitializedInputs = new Set();\n    }\n    /**\n     * Initializes a new component if one has not yet been created and cancels any scheduled\n     * destruction.\n     */\n    /**\n     * Initializes a new component if one has not yet been created and cancels any scheduled\n     * destruction.\n     * @param {?} element\n     * @return {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.connect = /**\n     * Initializes a new component if one has not yet been created and cancels any scheduled\n     * destruction.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        // If the element is marked to be destroyed, cancel the task since the component was reconnected\n        if (this.scheduledDestroyFn !== null) {\n            this.scheduledDestroyFn();\n            this.scheduledDestroyFn = null;\n            return;\n        }\n        if (!this.componentRef) {\n            this.initializeComponent(element);\n        }\n    };\n    /**\n     * Schedules the component to be destroyed after some small delay in case the element is just\n     * being moved across the DOM.\n     */\n    /**\n     * Schedules the component to be destroyed after some small delay in case the element is just\n     * being moved across the DOM.\n     * @return {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.disconnect = /**\n     * Schedules the component to be destroyed after some small delay in case the element is just\n     * being moved across the DOM.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Return if there is no componentRef or the component is already scheduled for destruction\n        if (!this.componentRef || this.scheduledDestroyFn !== null) {\n            return;\n        }\n        // Schedule the component to be destroyed after a small timeout in case it is being\n        // moved elsewhere in the DOM\n        this.scheduledDestroyFn = scheduler.schedule(function () {\n            if (_this.componentRef) {\n                /** @type {?} */ ((_this.componentRef)).destroy();\n            }\n        }, DESTROY_DELAY);\n    };\n    /**\n     * Returns the component property value. If the component has not yet been created, the value is\n     * retrieved from the cached initialization values.\n     */\n    /**\n     * Returns the component property value. If the component has not yet been created, the value is\n     * retrieved from the cached initialization values.\n     * @param {?} property\n     * @return {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.getPropertyValue = /**\n     * Returns the component property value. If the component has not yet been created, the value is\n     * retrieved from the cached initialization values.\n     * @param {?} property\n     * @return {?}\n     */\n    function (property) {\n        if (!this.componentRef) {\n            return this.initialInputValues.get(property);\n        }\n        return (/** @type {?} */ (this.componentRef.instance))[property];\n    };\n    /**\n     * Sets the input value for the property. If the component has not yet been created, the value is\n     * cached and set when the component is created.\n     */\n    /**\n     * Sets the input value for the property. If the component has not yet been created, the value is\n     * cached and set when the component is created.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.setPropertyValue = /**\n     * Sets the input value for the property. If the component has not yet been created, the value is\n     * cached and set when the component is created.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    function (property, value) {\n        if (strictEquals(value, this.getPropertyValue(property))) {\n            return;\n        }\n        if (!this.componentRef) {\n            this.initialInputValues.set(property, value);\n            return;\n        }\n        this.recordInputChange(property, value);\n        (/** @type {?} */ (this.componentRef.instance))[property] = value;\n        this.scheduleDetectChanges();\n    };\n    /**\n     * Creates a new component through the component factory with the provided element host and\n     * sets up its initial inputs, listens for outputs changes, and runs an initial change detection.\n     */\n    /**\n     * Creates a new component through the component factory with the provided element host and\n     * sets up its initial inputs, listens for outputs changes, and runs an initial change detection.\n     * @param {?} element\n     * @return {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.initializeComponent = /**\n     * Creates a new component through the component factory with the provided element host and\n     * sets up its initial inputs, listens for outputs changes, and runs an initial change detection.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ childInjector = Injector.create({ providers: [], parent: this.injector });\n        var /** @type {?} */ projectableNodes = extractProjectableNodes(element, this.componentFactory.ngContentSelectors);\n        this.componentRef = this.componentFactory.create(childInjector, projectableNodes, element);\n        this.implementsOnChanges =\n            isFunction((/** @type {?} */ ((this.componentRef.instance))).ngOnChanges);\n        this.initializeInputs();\n        this.initializeOutputs();\n        this.detectChanges();\n        var /** @type {?} */ applicationRef = this.injector.get(ApplicationRef);\n        applicationRef.attachView(this.componentRef.hostView);\n    };\n    /** Set any stored initial inputs on the component's properties. */\n    /**\n     * Set any stored initial inputs on the component's properties.\n     * @return {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.initializeInputs = /**\n     * Set any stored initial inputs on the component's properties.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.componentFactory.inputs.forEach(function (_a) {\n            var propName = _a.propName;\n            var /** @type {?} */ initialValue = _this.initialInputValues.get(propName);\n            if (initialValue) {\n                _this.setPropertyValue(propName, initialValue);\n            }\n            else {\n                // Keep track of inputs that were not initialized in case we need to know this for\n                // calling ngOnChanges with SimpleChanges\n                // Keep track of inputs that were not initialized in case we need to know this for\n                // calling ngOnChanges with SimpleChanges\n                _this.uninitializedInputs.add(propName);\n            }\n        });\n        this.initialInputValues.clear();\n    };\n    /** Sets up listeners for the component's outputs so that the events stream emits the events. */\n    /**\n     * Sets up listeners for the component's outputs so that the events stream emits the events.\n     * @return {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.initializeOutputs = /**\n     * Sets up listeners for the component's outputs so that the events stream emits the events.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ eventEmitters = this.componentFactory.outputs.map(function (_a) {\n            var propName = _a.propName, templateName = _a.templateName;\n            var /** @type {?} */ emitter = /** @type {?} */ ((/** @type {?} */ (((_this.componentRef)).instance))[propName]);\n            return map.call(emitter, function (value) { return ({ name: templateName, value: value }); });\n        });\n        this.events = merge.apply(void 0, eventEmitters);\n    };\n    /** Calls ngOnChanges with all the inputs that have changed since the last call. */\n    /**\n     * Calls ngOnChanges with all the inputs that have changed since the last call.\n     * @return {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.callNgOnChanges = /**\n     * Calls ngOnChanges with all the inputs that have changed since the last call.\n     * @return {?}\n     */\n    function () {\n        if (!this.implementsOnChanges || this.inputChanges === null) {\n            return;\n        }\n        (/** @type {?} */ ((((this.componentRef)).instance))).ngOnChanges(this.inputChanges);\n        this.inputChanges = null;\n    };\n    /**\n     * Schedules change detection to run on the component.\n     * Ignores subsequent calls if already scheduled.\n     */\n    /**\n     * Schedules change detection to run on the component.\n     * Ignores subsequent calls if already scheduled.\n     * @return {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.scheduleDetectChanges = /**\n     * Schedules change detection to run on the component.\n     * Ignores subsequent calls if already scheduled.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.scheduledChangeDetectionFn) {\n            return;\n        }\n        this.scheduledChangeDetectionFn = scheduler.scheduleBeforeRender(function () {\n            _this.detectChanges();\n            _this.scheduledChangeDetectionFn = null;\n        });\n    };\n    /**\n     * Records input changes so that the component receives SimpleChanges in its onChanges function.\n     */\n    /**\n     * Records input changes so that the component receives SimpleChanges in its onChanges function.\n     * @param {?} property\n     * @param {?} currentValue\n     * @return {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.recordInputChange = /**\n     * Records input changes so that the component receives SimpleChanges in its onChanges function.\n     * @param {?} property\n     * @param {?} currentValue\n     * @return {?}\n     */\n    function (property, currentValue) {\n        // Do not record the change if the component does not implement `OnChanges`.\n        if (!this.componentRef || !this.implementsOnChanges) {\n            return;\n        }\n        if (this.inputChanges === null) {\n            this.inputChanges = {};\n        }\n        // If there already is a change, modify the current value to match but leave the values for\n        // previousValue and isFirstChange.\n        var /** @type {?} */ pendingChange = this.inputChanges[property];\n        if (pendingChange) {\n            pendingChange.currentValue = currentValue;\n            return;\n        }\n        var /** @type {?} */ isFirstChange = this.uninitializedInputs.has(property);\n        this.uninitializedInputs.delete(property);\n        var /** @type {?} */ previousValue = isFirstChange ? undefined : this.getPropertyValue(property);\n        this.inputChanges[property] = new SimpleChange(previousValue, currentValue, isFirstChange);\n    };\n    /** Runs change detection on the component. */\n    /**\n     * Runs change detection on the component.\n     * @return {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.detectChanges = /**\n     * Runs change detection on the component.\n     * @return {?}\n     */\n    function () {\n        if (!this.componentRef) {\n            return;\n        }\n        this.callNgOnChanges(); /** @type {?} */\n        ((this.componentRef)).changeDetectorRef.detectChanges();\n    };\n    return ComponentFactoryNgElementStrategy;\n}());\n/**\n * Creates and destroys a component ref using a component factory and handles change detection\n * in response to input changes.\n *\n * \\@experimental\n */\nexport { ComponentFactoryNgElementStrategy };\nfunction ComponentFactoryNgElementStrategy_tsickle_Closure_declarations() {\n    /**\n     * Merged stream of the component's output events.\n     * @type {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.events;\n    /**\n     * Reference to the component that was created on connect.\n     * @type {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.componentRef;\n    /**\n     * Changes that have been made to the component ref since the last time onChanges was called.\n     * @type {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.inputChanges;\n    /**\n     * Whether the created component implements the onChanges function.\n     * @type {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.implementsOnChanges;\n    /**\n     * Whether a change detection has been scheduled to run on the component.\n     * @type {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.scheduledChangeDetectionFn;\n    /**\n     * Callback function that when called will cancel a scheduled destruction on the component.\n     * @type {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.scheduledDestroyFn;\n    /**\n     * Initial input values that were set before the component was created.\n     * @type {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.initialInputValues;\n    /**\n     * Set of inputs that were not initially set when the component was created.\n     * @type {?}\n     */\n    ComponentFactoryNgElementStrategy.prototype.uninitializedInputs;\n    /** @type {?} */\n    ComponentFactoryNgElementStrategy.prototype.componentFactory;\n    /** @type {?} */\n    ComponentFactoryNgElementStrategy.prototype.injector;\n}\n//# sourceMappingURL=component-factory-strategy.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ComponentFactoryResolver } from '@angular/core';\nimport { ComponentFactoryNgElementStrategyFactory } from './component-factory-strategy';\nimport { camelToDashCase, createCustomEvent } from './utils';\n/**\n * Class constructor based on an Angular Component to be used for custom element registration.\n *\n * \\@experimental\n * @record\n */\nexport function NgElementConstructor() { }\nfunction NgElementConstructor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgElementConstructor.prototype.observedAttributes;\n    /* TODO: handle strange member:\n    new (): NgElement&WithProperties<P>;\n    */\n}\n/**\n * Class that extends HTMLElement and implements the functionality needed for a custom element.\n *\n * \\@experimental\n * @abstract\n */\nvar /**\n * Class that extends HTMLElement and implements the functionality needed for a custom element.\n *\n * \\@experimental\n * @abstract\n */\nNgElement = /** @class */ (function (_super) {\n    tslib_1.__extends(NgElement, _super);\n    function NgElement() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.ngElementEventsSubscription = null;\n        return _this;\n    }\n    return NgElement;\n}(HTMLElement));\n/**\n * Class that extends HTMLElement and implements the functionality needed for a custom element.\n *\n * \\@experimental\n * @abstract\n */\nexport { NgElement };\nfunction NgElement_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgElement.prototype.ngElementStrategy;\n    /** @type {?} */\n    NgElement.prototype.ngElementEventsSubscription;\n    /**\n     * @abstract\n     * @param {?} attrName\n     * @param {?} oldValue\n     * @param {?} newValue\n     * @param {?=} namespace\n     * @return {?}\n     */\n    NgElement.prototype.attributeChangedCallback = function (attrName, oldValue, newValue, namespace) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    NgElement.prototype.connectedCallback = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    NgElement.prototype.disconnectedCallback = function () { };\n}\n/**\n * Initialization configuration for the NgElementConstructor. Provides the strategy factory\n * that produces a strategy for each instantiated element. Additionally, provides a function\n * that takes the component factory and provides a map of which attributes should be observed on\n * the element and which property they are associated with.\n *\n * \\@experimental\n * @record\n */\nexport function NgElementConfig() { }\nfunction NgElementConfig_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgElementConfig.prototype.injector;\n    /** @type {?|undefined} */\n    NgElementConfig.prototype.strategyFactory;\n    /** @type {?|undefined} */\n    NgElementConfig.prototype.propertyInputs;\n    /** @type {?|undefined} */\n    NgElementConfig.prototype.attributeToPropertyInputs;\n}\n/**\n * Gets a map of default set of attributes to observe and the properties they affect.\n * @param {?} inputs\n * @return {?}\n */\nfunction getDefaultAttributeToPropertyInputs(inputs) {\n    var /** @type {?} */ attributeToPropertyInputs = new Map();\n    inputs.forEach(function (_a) {\n        var propName = _a.propName, templateName = _a.templateName;\n        attributeToPropertyInputs.set(camelToDashCase(templateName), propName);\n    });\n    return attributeToPropertyInputs;\n}\n/**\n * \\@whatItDoes Creates a custom element class based on an Angular Component. Takes a configuration\n * that provides initialization information to the created class. E.g. the configuration's injector\n * will be the initial injector set on the class which will be used for each created instance.\n *\n * \\@description Builds a class that encapsulates the functionality of the provided component and\n * uses the config's information to provide more context to the class. Takes the component factory's\n * inputs and outputs to convert them to the proper custom element API and add hooks to input\n * changes. Passes the config's injector to each created instance (may be overriden with the\n * static property to affect all newly created instances, or as a constructor argument for\n * one-off creations).\n *\n * \\@experimental\n * @template P\n * @param {?} component\n * @param {?} config\n * @return {?}\n */\nexport function createNgElementConstructor(component, config) {\n    var /** @type {?} */ componentFactoryResolver = /** @type {?} */ (config.injector.get(ComponentFactoryResolver));\n    var /** @type {?} */ componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n    var /** @type {?} */ inputs = componentFactory.inputs;\n    var /** @type {?} */ defaultStrategyFactory = config.strategyFactory ||\n        new ComponentFactoryNgElementStrategyFactory(componentFactory, config.injector);\n    var /** @type {?} */ attributeToPropertyInputs = config.attributeToPropertyInputs || getDefaultAttributeToPropertyInputs(inputs);\n    var NgElementImpl = /** @class */ (function (_super) {\n        tslib_1.__extends(NgElementImpl, _super);\n        function NgElementImpl(strategyFactoryOverride) {\n            var _this = _super.call(this) || this;\n            // Use the constructor's strategy factory override if it is present, otherwise default to\n            // the config's factory.\n            var /** @type {?} */ strategyFactory = strategyFactoryOverride || defaultStrategyFactory;\n            _this.ngElementStrategy = strategyFactory.create();\n            return _this;\n        }\n        /**\n         * @param {?} attrName\n         * @param {?} oldValue\n         * @param {?} newValue\n         * @param {?=} namespace\n         * @return {?}\n         */\n        NgElementImpl.prototype.attributeChangedCallback = /**\n         * @param {?} attrName\n         * @param {?} oldValue\n         * @param {?} newValue\n         * @param {?=} namespace\n         * @return {?}\n         */\n        function (attrName, oldValue, newValue, namespace) {\n            var /** @type {?} */ propName = /** @type {?} */ ((attributeToPropertyInputs.get(attrName)));\n            this.ngElementStrategy.setPropertyValue(propName, newValue);\n        };\n        /**\n         * @return {?}\n         */\n        NgElementImpl.prototype.connectedCallback = /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            // Take element attribute inputs and set them as inputs on the strategy\n            attributeToPropertyInputs.forEach(function (propName, attrName) {\n                var /** @type {?} */ value = _this.getAttribute(attrName);\n                if (value) {\n                    _this.ngElementStrategy.setPropertyValue(propName, value);\n                }\n            });\n            this.ngElementStrategy.connect(this);\n            // Listen for events from the strategy and dispatch them as custom events\n            this.ngElementEventsSubscription = this.ngElementStrategy.events.subscribe(function (e) {\n                var /** @type {?} */ customEvent = createCustomEvent(_this.ownerDocument, e.name, e.value);\n                _this.dispatchEvent(customEvent);\n            });\n        };\n        /**\n         * @return {?}\n         */\n        NgElementImpl.prototype.disconnectedCallback = /**\n         * @return {?}\n         */\n        function () {\n            this.ngElementStrategy.disconnect();\n            if (this.ngElementEventsSubscription) {\n                this.ngElementEventsSubscription.unsubscribe();\n                this.ngElementEventsSubscription = null;\n            }\n        };\n        NgElementImpl.observedAttributes = Array.from(attributeToPropertyInputs.keys());\n        return NgElementImpl;\n    }(NgElement));\n    function NgElementImpl_tsickle_Closure_declarations() {\n        /** @type {?} */\n        NgElementImpl.observedAttributes;\n    }\n    // Add getters and setters to the prototype for each property input. If the config does not\n    // contain property inputs, use all inputs by default.\n    var /** @type {?} */ propertyInputs = config.propertyInputs || inputs.map(function (_a) {\n        var propName = _a.propName;\n        return propName;\n    });\n    propertyInputs.forEach(function (property) {\n        Object.defineProperty(NgElementImpl.prototype, property, {\n            get: function () { return this.ngElementStrategy.getPropertyValue(property); },\n            set: function (newValue) { this.ngElementStrategy.setPropertyValue(property, newValue); },\n            configurable: true,\n            enumerable: true,\n        });\n    });\n    return /** @type {?} */ ((/** @type {?} */ (NgElementImpl)));\n}\n//# sourceMappingURL=ng-element-constructor.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version } from '@angular/core';\n/**\n * \\@experimental\n */\nexport var /** @type {?} */ VERSION = new Version('6.0.0-beta.5-eb030f4eb4');\n//# sourceMappingURL=version.js.map"],"names":["Injector","ApplicationRef","map","merge","SimpleChange","tslib_1.__extends","ComponentFactoryResolver","Version"],"mappings":"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"}